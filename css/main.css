/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:0.67em 0}figcaption,figure{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}main{display:block}pre{font-family:monospace, monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace, monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button{overflow:visible}button,select{text-transform:none}button,html [type="button"],[type="reset"],[type="submit"]{-webkit-appearance:button}button::-moz-focus-inner,[type="button"]::-moz-focus-inner,[type="reset"]::-moz-focus-inner,[type="submit"]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type="button"]:-moz-focusring,[type="reset"]:-moz-focusring,[type="submit"]:-moz-focusring{outline:1px dotted ButtonText}input{overflow:visible}[type="checkbox"],[type="radio"]{box-sizing:border-box;padding:0}[type="number"]::-webkit-inner-spin-button,[type="number"]::-webkit-outer-spin-button{height:auto}[type="search"]{-webkit-appearance:textfield;outline-offset:-2px}[type="search"]::-webkit-search-cancel-button,[type="search"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}fieldset{padding:0.35em 0.75em 0.625em}legend{box-sizing:border-box;display:table;max-width:100%;padding:0;color:inherit;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}details{display:block}summary{display:list-item}menu{display:block}canvas{display:inline-block}template{display:none}[hidden]{display:none}@font-face{font-family:'Droid Sans';src:url("../fonts/DroidSans.eot");src:url("../fonts/DroidSans.woff") format("woff"),url("../fonts/DroidSans.ttf") format("truetype");font-weight:normal}@font-face{font-family:'Droid Sans';src:url("../fonts/DroidSans-Bold.eot");src:url("../fonts/DroidSans-Bold.woff") format("woff"),url("../fonts/DroidSans-Bold.ttf") format("truetype");font-weight:bold}body{margin:0;padding:0;line-height:1}.clearfix::after{content:'';display:block;clear:both}.scale{transform:scale(1);transition:transform 0.5s}.scale:hover{transform:scale(1.1);transition:transform 0.5s}.btn,.primary-btn,.alternative-btn{display:inline-block;padding:0 44px;min-height:50px;border-radius:25px;font-family:"Droid Sans",sans-serif;font-size:12px;font-weight:bold;text-transform:uppercase;text-decoration:none;letter-spacing:0.6px;line-height:50px;box-shadow:0 0 5px rgba(0,0,0,0.1)}.primary-btn{background-color:#fff;color:#f50000}.alternative-btn{background-color:#f50000;color:#fff}.paginator{margin:0 0 10px}.paginator ul{margin:0;padding:0;list-style:none;float:right}.paginator ul li{float:left;margin-right:5px}.paginator ul li:last-of-type{margin-right:0}.paginator ul li a{display:block;width:35px;height:35px;font-size:24px;line-height:35px;text-align:center;color:#fff;background-color:#f50000}.subscribe-form{max-width:530px;width:100%;border-bottom:4px solid #999999;margin:0 auto;padding-bottom:19px}.subscribe-form input[type='email'],.subscribe-form button[type='submit']{-moz-appearance:none;-webkit-appearance:none;border:none}.subscribe-form input[type='email']{float:left;width:96.22642%;color:#282828;font-family:"Droid Sans",sans-serif;font-size:16px;line-height:1;letter-spacing:3.2px}.subscribe-form button[type='submit']{float:right;width:16px;height:16px;font-size:0;margin-top:2px;padding:0}.subscribe-form button[type='submit']::before{display:block;font-size:16px;color:#f50000}.subscribe-form button[type='submit']:hover{cursor:pointer}.section-heading{margin:0}.section-heading span{display:block;letter-spacing:3.2px;font-size:32px}.section-heading span:first-of-type{font-family:"Oswald",sans-serif;color:#333;text-transform:uppercase;margin-bottom:5px}.section-heading span:last-of-type{font-family:"Great Vibes",cursive;color:#f50000}.nav-list{list-style:none;padding:0;margin:0}.nav-list li{float:left;margin-right:9px}.nav-list li:last-of-type{margin-right:0}.nav-list a{display:block;position:relative;padding:0 19px 0 18px;font-family:"Droid Sans",sans-serif;text-decoration:none;text-transform:uppercase;color:#fff;font-size:13px;font-weight:bold;letter-spacing:0.65px}.nav-list a::before{content:'';position:absolute;top:50%;left:0;width:100%;height:1px;background-color:#ffffff;opacity:0;transition:opacity 0.5s ease-in}.nav-list a:hover::before{opacity:1;transition:opacity 0.5s ease-in}.main-footer .nav-list{display:inline-block;margin-bottom:15px}.main-footer .nav-list a{color:#333;font-size:13px;font-weight:400}.main-footer .nav-list a::before{background-color:#333}.slider-control{clear:both;height:4px;background-color:#e9e9e9;font-size:0}.slider-control::after{content:'';display:block;margin-left:22px;width:168px;height:4px;background-color:#f50000}.promotional-part .slider-control{height:3px}.promotional-part .slider-control::after{width:75%;height:3px;margin:0}.social{margin:0 56px 0 0}.social dt{display:inline-block;margin-right:6px;vertical-align:middle}.social dt::before{font-size:24px;color:#fff}.social dd{display:inline-block;vertical-align:middle;margin:0 42px 0 0;font-family:"Open Sans", sans-serif;color:#ffffff;font-size:14px;text-transform:uppercase}.social dd:last-of-type{margin:0}.members .social{margin-top:25px;display:none}.members .social dt{margin-right:4px;vertical-align:bottom}.members .social dd{margin-right:18px;vertical-align:bottom}.concert-info{margin-bottom:31px;font-family:"Droid Sans",sans-serif;color:#333;font-size:16px}.concert-info td{padding-bottom:10px}.concert-info td:first-child{width:70px;text-transform:capitalize}.concert-info td:first-child::before{content:':';float:right}.concert-info td:first-child::after{content:'';clear:both;display:block}.concert-info td:last-child{padding-left:18px}.concert-info tr:last-child td{padding-bottom:0}.container{max-width:1170px;width:100%;margin:0 auto;padding-top:103px}.main-header .navigational-part{padding:11px 50px 13px;background-color:#f50000;display:flex;justify-content:space-between;align-items:center}.main-header .header-right-side{display:flex;align-items:center}.main-header h1{text-align:center;margin:0}.main-header h1 a,.main-header h1 img{display:block}.main-header .promotional-part{border:none;border-radius:0;margin:0}.main-header .promotional-part .slide{background-repeat:no-repeat;background-position:center;background-size:cover;padding:208px 0 0;text-align:center}.main-header .promotional-part .first-slide{background-image:url("../img/discover-background.png")}.main-header .promotional-part .second-slide{background-image:url("../img/a_dog.jpg")}.main-header .promotional-part .third-slide{background-image:url("../img/a_cat.jpg")}.main-header .promotional-part p{margin:0}.main-header .promotional-part p:nth-of-type(1){font-family:"Oswald",sans-serif;font-size:116px;font-weight:bold;text-transform:uppercase;color:#f50000;margin-bottom:5px}.main-header .promotional-part p:nth-of-type(2){font-family:"Great Vibes",cursive;font-size:80px;color:#333}.main-header .promotional-part .alternative-btn{margin:90px auto 174px}.main-footer{padding:69px 0 90px;border-top:1px solid #d2d2d2;color:#333333;letter-spacing:0.65px;font-size:13px;font-family:"Droid Sans",sans-serif;text-align:center}.main-footer p{margin:0}.main-footer p span{font-family:"Great Vibes",cursive;font-size:28px;color:#f50000}.members{padding-bottom:99px;border-bottom:1px solid #dfdfdf;margin-bottom:97px}.members .members-list{margin:0;padding:0;list-style:none;display:flex;justify-content:space-between}.members .members-list li{width:31.62393%;position:relative}.members .members-list li img{width:100%;height:auto}.members .members-list a:hover .social{display:block}.members .member-info{position:absolute;left:0;bottom:0;right:0;padding:17px 27px 24px;background-color:#f50000;color:#fff}.members .member-info h5{margin:0 0 7px;font-size:22px;font-family:"Oswald",sans-serif}.members .member-info span{font-size:16px;font-family:"Droid Sans",sans-serif}.upcoming-concert{float:left;width:65.81197%}.upcoming-concert .section-heading{margin-bottom:41px}.upcoming-concert .left-side{max-width:270px;float:left}.upcoming-concert .right-side{box-sizing:border-box;padding:23px 79px 35px;float:left}.upcoming-concert .right-side h5{margin:0 0 29px;font-family:"Oswald",sans-serif;color:#333;font-size:22px;font-weight:500}.latest-videos{float:right;width:31.62393%}.latest-videos iframe{width:100%;height:290px;border:none}.our-founder{clear:both;position:relative;background-color:#333;color:#fff;margin:99px 0 104px}.our-founder img{float:right}.our-founder .info{position:absolute;top:0;left:0;right:0;bottom:0;padding:86px 101px 0}.our-founder .info h2{font-family:"Oswald",sans-serif;font-size:32px;font-weight:500;text-transform:uppercase;margin:0}.our-founder .info p{font-family:"Droid Sans",sans-serif;font-size:22px;max-width:556px;margin:0 0 47px}.our-founder .info p span{font-family:"Great Vibes",cursive;font-size:65px}.popular-songs{float:left;width:65.81197%}.popular-songs iframe{border:none;width:100%;height:166px;margin:33px 0 59px}.popular-songs .song-list{margin:0;padding:0;list-style:none;display:flex;flex-direction:column;flex-wrap:wrap;max-height:160px}.popular-songs .song-list li{max-width:199px;min-height:38px;line-height:38px;border-bottom:1px solid rgba(153,153,153,0.2)}.popular-songs .song-list li a{display:inline-block;width:100%;font-size:16px;line-height:1;font-family:"Droid Sans",sans-serif;text-decoration:none;color:#333}.instagram-feed{float:right;width:31.62393%}.instagram-feed ul{margin:8px 0 0;padding:0;list-style:none;display:flex;justify-content:space-between;flex-wrap:wrap}.instagram-feed ul li{max-width:170px;max-height:169px;margin-top:31px}.instagram-feed ul li a{display:block}.downloads{background-image:url("../img/downloads-background.jpg");background-repeat:no-repeat;background-position:center;background-size:cover;padding:80px 0 120px;margin-top:85px;color:#fff;text-align:center}.downloads h2{font-family:"Oswald",sans-serif;font-size:32px;font-weight:500;margin:0 0 15px}.downloads p{font-family:"Droid Sans",sans-serif;font-size:22px;margin:0 0 41px}.downloads ul{margin:0;padding:0;list-style:none;display:inline-block}.downloads ul li{float:left;margin-right:14px}.downloads ul li:last-of-type{margin-right:0}.downloads ul li a{display:block}.subscription{padding:105px 0 70px}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
